######################### HOMING #########################

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro _HOME_Z]
gcode:
    {% set th = printer.toolhead %}
    {% set RUN_CURRENT_Z = printer.configfile.settings['tmc2209 stepper_z'].run_current|float %}
    {% set HOME_CURRENT = 0.4 %}
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={HOME_CURRENT}
    G90
    G28 Z
    G1 Z30
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={RUN_CURRENT_Z}

[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28 Z
    {% endif %}

######################### PARKING #########################

[gcode_macro PARKBED]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X60 Y60 Z20 F18000                                     
    RESTORE_GCODE_STATE NAME=PARKBED

# Park front center
[gcode_macro PARKFRONT]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                                                                                                                         ; absolute positioning
    G0 X60 Y5 Z20 F18000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

######################### START / END #########################

#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
#gcode:
#    {% set HOTEND_TEMP = params.HOTEND|default(245)|float %}
#    {% set chamber = params.CHAMBER|default(0)|int %}
#    {% set bed = params.BED|int %}
#    M104 S180
#    M140 S{bed}
#    G28                            ; home all axes
#    G90                            ; absolute positioning    
#    G1 Z20 F3000                   ; move nozzle away from bed
#    M109 S{HOTEND_TEMP}

#####################################################################
#   A_better_print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("50")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S255                                         # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                    # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Goes to center of the bed
    M190 S{target_bed}                                # Sets target temp for the bed
#    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 5min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
    M190 S{target_bed}                              # Sets target temp for the bed
    G4 P300000                                      # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  M109 S{target_extruder}                           # Heats the nozzle to your print temp

  # Create a purge line and starts the print
  G1 X2 Y4 Z0.4 F10000                             # Moves to starting point
  G1 X115 E20 F1000                                # Purge line


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-8.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    # SET_PIN PIN=nevermore VALUE=0
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear

######################### LOAD / UNLOAD #########################

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=load_state
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
  M117 Heating...
  M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Loading filament...
  # Load the filament into the hotend area.
  G92 E0.0
  G91
  G1 E30 F1000 # fast-load
  G1 E50 F300 # purge
  G90
  G92 E0.0
  M400
  M117 Filament loaded!
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    M117 Heating...
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M109 S{params.TEMP|default(220, true)}
  {% endif %}
  M117 Unloading filament...
  G92 E0.0
  G91
  G1 E15 F300 # purge
  G1 E-10 F3600
  G1 E-80 F1000
  G90
  G92 E0.0
  M400
  M117 Remove Filament Now!
  # M300 S300 P1000
  # M117 Filament unloaded!
  RESTORE_GCODE_STATE NAME=unload_state

######################### HEATSOAK #########################

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors)
[gcode_macro OFF]
gcode:
    M84                                             ; turn steppers off
    TURN_OFF_HEATERS                                ; turn bed / hotend off
    M107                                            ; turn print cooling fan off
    # SET_FAN_SPEED FAN=Nevermore SPEED=0
    SET_PIN PIN=Chamber_LED VALUE=0

[delayed_gcode DELAYED_OFF]
gcode:
    OFF                                                             ; call "OFF" macro, to turn off everything (heaters, motors, lights, fans)

[gcode_macro HEATSOAK]
gcode:
    # Parameters
    {% set t = params.T|default(110)|int %}
    {% set move = params.MOVE|default(1)|int %}
    {% set PERIOD = (params.PERIOD | default(60) | int) %} ## minutes

    UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
    M140 S{t}                                       ; heat bed
    {% if t >= 100 %}
        M104 S180                                   ; set hotend to no-ooze temp
        M106 S205                                   ; turn on part fan (80%)
    {% else %}
        M106 S0                                     ; turn part fan off
    {% endif %}
    {% if move == 1 %}
        CG28                                        ; conditional home
        PARKBED                                     ; move to bed
    {% endif %}
    
    RESPOND TYPE=command MSG="Soaking for { PERIOD }m"
    G4 P{ PERIOD * 1000 * 60 }
